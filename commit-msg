#!/usr/bin/perl

use warnings;
use strict;

my $return_code = 0;
my $commit_msg = `cat $ARGV[0]`;
my @array_msg = split("\n", $commit_msg);

# Get first 2 lines of git message
my $first_line = $array_msg[0];
my $second_line = $array_msg[1];

# Remove commented lines from git message
for my $idx (reverse 0..$#array_msg) {
	if ( $array_msg[$idx] =~ /^#/ ) {
		splice(@array_msg, $idx, 1, ());
	}
}

# Get rest of the body
my $body = join("\n", @array_msg[ 2 .. $#array_msg ]);

# Matches: "$type: $word $words+" - with at least three words
if ("$first_line" !~ /^\w+: \S+(\s\S+){2,}$/) {
        print "First line should be: <item>: <title> (at least 3 words)\n";
	if ( substr("$first_line", -1) =~ /\s/ ) {
		print "First line cannot end with a space: [$first_line]\n"
	} else {
		print "First line is: [$first_line]\n";
	}
	$return_code = 1;
} elsif ("$second_line" !~ /^$/) {
        print "Second line should be empty.\n";
        print "Second line is: [$second_line]\n";
	$return_code = 1;
} elsif ("$body" !~ /\S+(\s\S+){15,}$/) {
	print "Body should have at least 15 words.\n";
	my $num = 0;
	$num++ while $body =~ /\S+/g;
	print "Body has $num words currently.\n";
	$return_code = 1;
}

exit $return_code;
