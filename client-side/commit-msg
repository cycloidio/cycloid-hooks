#!/usr/bin/perl
#
# This hook checks the syntax of git commit messages before they are commited.
#
# Commits done to merge branches are ignored.
# Other commit messages should respect the following schema:
#   <type>: <title>
#   <new_line>
#   <body>
#
# <type>: represents what you're working on: file (if unique), feature name,
# component etc. Type such as: fix/feat/etc are passing but not advised for
# readability purposes - but this is up to you.
#
# <title>: a short description of the modification, at least 3 words.
#
# N.B.: The space after the colon has to be respected.
#
# <body>: should be a description of the change: context, why, how, etc. Any relevent
# information should be there, and allow to understand your commit just by the message.
#
# It is advised to provide link of other commits, of mailing-list etc if need be.
# The body should be at least 15 words.
#
#
# This hook should not create too much constrain on commit message, but simply encourage
# to use the structure previously explained. It is up to every-one to use it or not, and
# can be easily by-passed with a 'git commit --no-verify' or -n.
#

use warnings;
use strict;

my $return_code = 0;
my $commit_msg = `cat $ARGV[0]`;
my @array_msg = split("\n", $commit_msg);

# Get first 2 lines of git message
my $first_line = $array_msg[0];
my $second_line = $array_msg[1];

# Remove commented lines from git message
for my $idx (reverse 0..$#array_msg) {
	if ( $array_msg[$idx] =~ /^#/ ) {
		splice(@array_msg, $idx, 1, ());
	}
}

# Get rest of the body
my $body = join("\n", @array_msg[ 2 .. $#array_msg ]);

# If not a merge, matches: "$type: $word $words+" - with at least three words
if ("$first_line" =~ /^Merge branch/) {
	$return_code = 0;
} elsif ("$first_line" !~ /^\S+: \S+(\s\S+){2,}(\s)?$/) {
        print "First line should be: <item>: <title> (at least 3 words)\n";
	$return_code = 1;
} elsif ("$second_line" !~ /^$/) {
        print "Second line should be empty.\n";
        print "Second line is: [$second_line]\n";
	$return_code = 1;
} elsif ("$body" !~ /\S+(\s+\S+){15,}\s*$/) {
	print "Body should have at least 15 words.\n";
	my $num = 0;
	$num++ while $body =~ /\S+/g;
	print "Body has $num words currently.\n";
	$return_code = 1;
}

if ($return_code == 1) {
	print "Message rejected, full message was:\n";
	print "##########################################\n";
	print "$first_line\n";
	print "$second_line\n";
	print "$body\n";
}

exit $return_code;
